# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'magicDeckViewerFrames.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Deck Helper - by ekohrt (2021)")
        MainWindow.resize(1000, 700)
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.frame_4 = QtWidgets.QFrame(self.centralwidget)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pasteDeck_plainTextEdit = QtWidgets.QPlainTextEdit(self.frame_4)
        self.pasteDeck_plainTextEdit.setObjectName("pasteDeck_plainTextEdit")
        self.verticalLayout_4.addWidget(self.pasteDeck_plainTextEdit)
        self.viewSuggestions_pushButton = QtWidgets.QPushButton(self.frame_4)
        self.viewSuggestions_pushButton.setObjectName("viewSuggestions_pushButton")
        self.verticalLayout_4.addWidget(self.viewSuggestions_pushButton)
        self.horizontalLayout_3.addWidget(self.frame_4)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.deck_listWidget = QtWidgets.QListWidget(self.frame_3)
        self.deck_listWidget.setObjectName("deck_listWidget")
        item = QtWidgets.QListWidgetItem()
        self.deck_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.deck_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.deck_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.deck_listWidget.addItem(item)
        self.verticalLayout_6.addWidget(self.deck_listWidget)
        self.horizontalLayout_3.addWidget(self.frame_3)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.suggestions_listWidget = QtWidgets.QListWidget(self.frame_2)
        self.suggestions_listWidget.setObjectName("suggestions_listWidget")
        item = QtWidgets.QListWidgetItem()
        self.suggestions_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.suggestions_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.suggestions_listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.suggestions_listWidget.addItem(item)
        self.verticalLayout_5.addWidget(self.suggestions_listWidget)
        self.matchColors_checkBox = QtWidgets.QCheckBox(self.frame_2)
        self.matchColors_checkBox.setObjectName("matchColors_checkBox")
        self.verticalLayout_5.addWidget(self.matchColors_checkBox)
        self.horizontalLayout_3.addWidget(self.frame_2)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_5 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.card_image = QtWidgets.QLabel(self.frame_5)
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        #sizePolicy.setHeightForWidth(self.card_image.sizePolicy().hasHeightForWidth())
        #self.card_image.setSizePolicy(sizePolicy)
        self.card_image.setMaximumSize(QtCore.QSize(300, 420))
        self.card_image.setMinimumSize(QtCore.QSize(200, 280))
        self.card_image.setText("")
        self.card_image.setPixmap(QtGui.QPixmap("DefaultCardImage.png"))
        self.card_image.setScaledContents(True)
        self.card_image.setObjectName("card_image")
        self.horizontalLayout.addWidget(self.card_image)
        self.verticalLayout_3.addWidget(self.frame_5)
        self.getImage_pushButton = QtWidgets.QPushButton(self.frame)
        self.getImage_pushButton.setObjectName("getImage_pushButton")
        self.verticalLayout_3.addWidget(self.getImage_pushButton)
        self.cardText_plainTextEdit = QtWidgets.QPlainTextEdit(self.frame)
        self.cardText_plainTextEdit.setAutoFillBackground(False)
        self.cardText_plainTextEdit.setReadOnly(True)
        self.cardText_plainTextEdit.setObjectName("cardText_plainTextEdit")
        self.verticalLayout_3.addWidget(self.cardText_plainTextEdit)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.addToDeck_pushButton = QtWidgets.QPushButton(self.frame)
        self.addToDeck_pushButton.setObjectName("addToDeck_pushButton")
        self.horizontalLayout_2.addWidget(self.addToDeck_pushButton)
        self.viewSimilar_pushButton = QtWidgets.QPushButton(self.frame)
        self.viewSimilar_pushButton.setObjectName("viewSimilar_pushButton")
        self.horizontalLayout_2.addWidget(self.viewSimilar_pushButton)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_7.addLayout(self.verticalLayout_3)
        self.horizontalLayout_3.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 631, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionMade_by_Ethan_Kohrt_2020 = QtWidgets.QAction(MainWindow)
        self.actionMade_by_Ethan_Kohrt_2020.setObjectName("actionMade_by_Ethan_Kohrt_2021")
        self.menuFile.addAction(self.actionMade_by_Ethan_Kohrt_2020)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Deck Helper - by Ethan Kohrt (2021)"))
        self.viewSuggestions_pushButton.setToolTip(_translate("MainWindow", "Suggests related cards based on your current deck"))
        self.viewSuggestions_pushButton.setText(_translate("MainWindow", "View Suggestions"))
        __sortingEnabled = self.deck_listWidget.isSortingEnabled()
        self.deck_listWidget.setSortingEnabled(False)
        item = self.deck_listWidget.item(0)
        item.setText(_translate("MainWindow", "Lightning Bolt"))
        item = self.deck_listWidget.item(2)
        item.setText(_translate("MainWindow", "Champion of the Parish"))
        self.deck_listWidget.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.suggestions_listWidget.isSortingEnabled()
        self.suggestions_listWidget.setSortingEnabled(False)
        item = self.suggestions_listWidget.item(0)
        item.setText(_translate("MainWindow", "Liliana of the Veil"))
        item = self.suggestions_listWidget.item(1)
        item.setText(_translate("MainWindow", "Angel of Mercy"))
        item = self.suggestions_listWidget.item(2)
        item.setText(_translate("MainWindow", "Baneslayer Angel"))
        item = self.suggestions_listWidget.item(3)
        item.setText(_translate("MainWindow", "Beck // Call"))
        self.suggestions_listWidget.setSortingEnabled(__sortingEnabled)
        self.matchColors_checkBox.setToolTip(_translate("MainWindow", "Filters out cards that don\'t match your deck\'s colors"))
        self.matchColors_checkBox.setText(_translate("MainWindow", "Match Colors"))
        self.card_image.setToolTip(_translate("MainWindow", "Card Image"))
        self.getImage_pushButton.setToolTip(_translate("MainWindow", "Downloads this card\'s image file from Gatherer"))
        self.getImage_pushButton.setText(_translate("MainWindow", "Pull Image From Gatherer"))
        self.cardText_plainTextEdit.setToolTip(_translate("MainWindow", "Card Text"))
        self.cardText_plainTextEdit.setPlainText(_translate("MainWindow", "Liliana of the Veil\n"
"1{B}{B}\n"
"Legendary Planeswalker — Liliana\n"
"\n"
"+1: Each player discards a card.\n"
"−2: Target player sacrifices a creature.\n"
"−6: Separate all permanents target player controls into two piles. That player sacrifices all permanents in the pile of their choice."))
        self.addToDeck_pushButton.setToolTip(_translate("MainWindow", "Adds the selected card to your deck"))
        self.addToDeck_pushButton.setText(_translate("MainWindow", "Add to Deck"))
        self.viewSimilar_pushButton.setToolTip(_translate("MainWindow", "Suggests cards that are similar to this card"))
        self.viewSimilar_pushButton.setText(_translate("MainWindow", "Suggest Similar"))
        self.menuFile.setTitle(_translate("MainWindow", "Info"))
        self.actionMade_by_Ethan_Kohrt_2020.setText(_translate("MainWindow", "Made by Ethan Kohrt (2021)"))
#        
#        ##########################
#        #Attach Buttons to methods
#        ##########################
#        self.addToDeck_pushButton.clicked.connect(self.addToDeck)
#        self.viewSimilar_pushButton.clicked.connect(self.viewSimilar)
#        self.getImage_pushButton.clicked.connect(self.pullImage)
#        self.matchColors_checkBox.clicked.connect(self.matchColors)
#        self.viewSuggestions_pushButton.clicked.connect(self.viewSuggestions)
    
    
    
    # =============================================================================
    # Button Handlers
    # =============================================================================
    
    
    
    #View Suggestions button
#    def viewSuggestions(self):
#        print("PUSHED viewSuggestions")
#    
#    
#    #Pull image button
#    def pullImage(self):
#        print("PUSHED pullImage")
#            
#    
#    #Add to Deck Button
#    def addToDeck(self):
#        print("pushed addToDeck")
#    
#    
#    #Suggest similar button
#    def viewSimilar(self):
#        print("pushed suggestSimilar")
#    
#    
#    #Match Colors Button
#    def matchColors(self):
#        print("pushed matchColors")


    #Show Deck (Helper: text input to list view of deck)
            
    
    
    #Show Recommended (Helper: update recommended list with)
    
    
    
    #Show Info (Helper: when list item clicked, change info panel to that card)
            
            
    # =============================================================================
    # 
    # =============================================================================
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
